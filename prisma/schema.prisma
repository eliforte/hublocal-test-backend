generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id          String   @id @default(uuid()) @unique
  name        String
  email       String
  password    String
  is_admin    String
  created_at  DateTime @default(now())
  companies Companies[]

  @@map("users")
}

model Companies {
  id          String    @id @default(uuid()) @unique
  name        String
  cnpj        String    @unique
  description String
  created_at  DateTime @default(now())
  user_id     String
  user        Users @relation(fields: [user_id], references: [id])
  places Places[]
  responsables Responsables[]

  @@map("companies")
}

model Places {
  id        String    @id @default(uuid()) @unique
  name      String
  address   String
  address_number Int
  complement String
  cep String
  created_at  DateTime @default(now())
  company_id String
  company     Companies @relation(fields: [company_id], references: [id])
  responsables Responsables[]
  tickets Tickets[]

  @@map("places")
}

model Responsables {
  id String @id @default(uuid()) @unique
  full_name String
  address String
  address_number Int
  complement String
  cep String
  is_main_responsable Boolean
  created_at  DateTime @default(now())
  company_id String
  company Companies @relation(fields: [company_id], references: [id])
  places_id String
  places Places @relation(fields: [places_id], references: [id])

  @@map("responsables")
}

model Tickets {
  id String @id @default(uuid()) @unique
  title String
  created_at  DateTime @default(now())
  update_at DateTime
  created_by_user String
  upgradable_by_user String
  status String
  name      String?
  address   String?
  address_number Int?
  complement String?
  cep String?
  place_id String
  place Places @relation(fields: [place_id], references: [id])

  @@map("tickets")
}